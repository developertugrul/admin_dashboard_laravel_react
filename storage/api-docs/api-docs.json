{
    "openapi": "3.0.0",
    "info": {
        "title": "Admin Panel API",
        "description": "This application is developed by full stack web developer Tugrul Yildirim",
        "contact": {
            "email": "contact@tugrulyildirim.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://admin.local/api/v1",
            "description": "Demo API Server"
        }
    ],
    "paths": {
        "/auth/register": {
            "post": {
                "tags": [
                    "Register a new user"
                ],
                "summary": "Register a new user",
                "description": "Returns the user data, token, status code and message",
                "operationId": "register",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAuthRegisterRequestSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserAuthResponseSchema"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "409": {
                        "description": "Conflict"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Login using username and password"
                ],
                "summary": "Login a user",
                "description": "Returns the user data, token, expires_at and token_type",
                "operationId": "login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAuthRequestSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserAuthResponseSchema"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "NotFound"
                    },
                    "409": {
                        "description": "Conflict"
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "Logout the user"
                ],
                "summary": "Logout a user",
                "description": "Returns the status of the operation",
                "operationId": "logout",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserLogoutRequestSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserLogoutResponseSchema"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "NotFound"
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/auth/token": {
            "post": {
                "tags": [
                    "Check the token is valid"
                ],
                "summary": "Check token",
                "description": "Returns token, status and message",
                "operationId": "0360ae12d7fab710028bfa25cbc9b57e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCheckTokenRequestSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserCheckTokenResponseSchema"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserCheckTokenResponseSchema"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/auth/authorize": {
            "post": {
                "tags": [
                    "Get authorized user data"
                ],
                "summary": "Check if user is logged in",
                "description": "Returns the user data",
                "operationId": "87962c23d9bbaf3f3b9d5e3eb545adb0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserAuthorizeRequestSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserAuthorizeResponseSchema"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserAuthorizeResponseSchema"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/auth/change-password": {
            "post": {
                "tags": [
                    "Change authorized user's password"
                ],
                "summary": "Check if user is logged in",
                "description": "Returns password change status",
                "operationId": "e9210ecd43221a32527c555522eb5ade",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserPasswordChangeRequestSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserPasswordChangeResponseSchema"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserPasswordChangeResponseSchema"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        },
        "/auth/token/refresh": {
            "post": {
                "tags": [
                    "Refresh token"
                ],
                "summary": "Refresh token",
                "description": "Returns new token",
                "operationId": "9034c3bc2d3f94a6749e2bfa6d6cc72a",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {}
                        }
                    }
                },
                "security": [
                    {
                        "passport": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "UserAuthRegisterRequestSchema": {
                "title": "User registiration request model",
                "description": "User registiration request model",
                "properties": {
                    "name": {
                        "title": "Name",
                        "description": "Name of the user",
                        "type": "string",
                        "example": "Tuğrul"
                    },
                    "surname": {
                        "title": "Surname",
                        "description": "Surname of the user",
                        "type": "string",
                        "example": "Yıldırım"
                    },
                    "username": {
                        "title": "Username",
                        "description": "Username of the user",
                        "type": "string",
                        "example": "tugrulyildirim"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email of the user",
                        "type": "string",
                        "example": "contact[at]tugrulyildirim.com"
                    },
                    "password": {
                        "title": "Password",
                        "description": "Password of the user",
                        "type": "string",
                        "example": "123456"
                    },
                    "password_confirmation": {
                        "title": "Password confirmation",
                        "description": "Password confirmation of the user",
                        "type": "string",
                        "example": "123456"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "UserAuthRegisterRequestSchema"
                }
            },
            "UserAuthRequestSchema": {
                "title": "User authentication request model",
                "description": "User authentication request model",
                "properties": {
                    "username": {
                        "title": "Username",
                        "description": "Username of the user",
                        "type": "string",
                        "example": "tugrulyildirim"
                    },
                    "password": {
                        "title": "Password",
                        "description": "Password for authentication",
                        "type": "string",
                        "example": "123456"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "UserAuthRequestSchema"
                }
            },
            "UserAuthResponseSchema": {
                "title": "User authentication response model",
                "description": "User authentication response model",
                "properties": {
                    "success": {
                        "title": "Success",
                        "description": "Success",
                        "type": "boolean",
                        "format": "boolean",
                        "example": "true"
                    },
                    "id": {
                        "title": "id",
                        "description": "User ID",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    },
                    "username": {
                        "title": "Username",
                        "description": "Username for authentication",
                        "type": "string",
                        "format": "string",
                        "example": "tugrulyildirim"
                    },
                    "name": {
                        "title": "Name",
                        "description": "First name of the user",
                        "type": "string",
                        "format": "string",
                        "example": "Tuğrul"
                    },
                    "surname": {
                        "title": "Surname",
                        "description": "Surname of the user",
                        "type": "string",
                        "format": "string",
                        "example": "Yıldırım"
                    },
                    "user": {
                        "$ref": "#/components/schemas/UserResource"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email of the user",
                        "type": "string",
                        "format": "string",
                        "example": "iletisim[at]tugrulyildirim.com",
                        "nullable": true
                    },
                    "access_token": {
                        "title": "Access Token",
                        "description": "Access Token",
                        "type": "string",
                        "format": "string",
                        "example": "token12313123..."
                    },
                    "token_type": {
                        "title": "Token Type",
                        "description": "Token Type",
                        "type": "string",
                        "format": "string",
                        "example": "Bearer"
                    },
                    "expires_at": {
                        "title": "Expires at",
                        "description": "Expires at",
                        "type": "integer",
                        "format": "int64",
                        "example": 3600
                    },
                    "is_active": {
                        "title": "Is it active?",
                        "description": "Is it active?",
                        "type": "boolean",
                        "format": "boolean",
                        "example": true
                    },
                    "privileges": {
                        "title": "Privileges",
                        "description": "All privileges of the user",
                        "type": "array",
                        "format": "array",
                        "items": {
                            "type": "object",
                            "example": {
                                "name": "admin",
                                "value": true
                            }
                        }
                    }
                },
                "type": "object",
                "xml": {
                    "name": "UserAuthResponseSchema"
                }
            },
            "UserAuthorizeRequestSchema": {
                "title": "User authorisation request model",
                "description": "User authorisation request model",
                "xml": {
                    "name": "UserAuthorizeRequestSchema"
                }
            },
            "UserCheckTokenRequestSchema": {
                "title": "User check token request model",
                "description": "User check token request model",
                "properties": {
                    "token": {
                        "title": "Token",
                        "description": "Token for check",
                        "type": "string",
                        "format": "string",
                        "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6MSwiaXNfYWN0aXZlIjoxLCJ1c2VyX3R5cGUiOjIsImVtYWlsIjoidHVncnVsQGdtYWlsLmNvbSIsInVzZXJuYW"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "UserCheckTokenRequestSchema"
                }
            },
            "UserLogoutRequestSchema": {
                "title": "User logout request model",
                "description": "User logout request model",
                "properties": {
                    "token": {
                        "title": "Token",
                        "description": "Token for logout",
                        "type": "string",
                        "format": "string",
                        "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6MSwiaXNfYWN0aXZlIjoxLCJ1c2VyX3R5cGUiOjIsImVtYWlsIjoidHVncnVsQGdtYWlsLmNvbSIsInVzZXJuYW"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "UserLogoutRequestSchema"
                }
            },
            "UserPasswordChangeRequestSchema": {
                "title": "User password change request model",
                "description": "User password change request model",
                "properties": {
                    "old_password": {
                        "title": "Old password",
                        "description": "Old password",
                        "type": "string",
                        "example": "123456"
                    },
                    "new_password": {
                        "title": "New password",
                        "description": "New password",
                        "type": "string",
                        "example": "123456"
                    },
                    "confirm_password": {
                        "title": "Confirm password",
                        "description": "Confirm new password",
                        "type": "string",
                        "example": "123456"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "UserPasswordChangeRequestSchema"
                }
            },
            "ProjectResource": {
                "title": "ProjectResource",
                "description": "Project resource",
                "properties": {
                    "data": {
                        "title": "Data",
                        "description": "Data wrapper",
                        "type": "array",
                        "items": {}
                    }
                },
                "type": "object",
                "xml": {
                    "name": "ProjectResource"
                }
            },
            "StoreUserRequests": {
                "title": "Store User request",
                "description": "Store User request body data",
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "title": "name",
                        "description": "Name of the new user",
                        "type": "string",
                        "example": "A nice project"
                    },
                    "description": {
                        "title": "description",
                        "description": "Description of the new user",
                        "type": "string",
                        "example": "This is new project's description"
                    },
                    "author_id": {
                        "title": "author_id",
                        "description": "Author's id of the new project",
                        "type": "integer",
                        "format": "int64",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "UserAuthorizeResponseSchema": {
                "title": "User authorisation response model",
                "description": "User authorisation response model",
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/UserResource"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "UserAuthorizeResponseSchema"
                }
            },
            "UserCheckTokenResponseSchema": {
                "title": "User check token response model",
                "description": "User check token response model",
                "properties": {
                    "success": {
                        "title": "Success",
                        "description": "Success",
                        "type": "boolean",
                        "format": "boolean",
                        "example": "true"
                    },
                    "token": {
                        "title": "token",
                        "description": "User token",
                        "type": "string",
                        "format": "string",
                        "example": "bearer token123..."
                    },
                    "message": {
                        "title": "message",
                        "description": "Response message",
                        "type": "string",
                        "format": "string",
                        "example": "token_is_valid"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "UserCheckTokenResponseSchema"
                }
            },
            "UserLogoutResponseSchema": {
                "title": "User logout response model",
                "description": "User logout response mode",
                "properties": {
                    "success": {
                        "title": "Message",
                        "description": "Message of the response",
                        "type": "string",
                        "format": "boolean",
                        "example": "logout_success"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "UserLogoutResponseSchema"
                }
            },
            "UserPasswordChangeResponseSchema": {
                "title": "User password change response model",
                "description": "User password change response model",
                "properties": {
                    "message": {
                        "title": "Message",
                        "description": "Message of the response",
                        "type": "string",
                        "example": "password_change_success"
                    },
                    "success": {
                        "title": "Success",
                        "description": "Success of the response",
                        "type": "boolean",
                        "format": "boolean",
                        "example": "true"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "UserPasswordChangeResponseSchema"
                }
            },
            "UserResource": {
                "title": "User resource",
                "description": "User resource",
                "properties": {
                    "id": {
                        "title": "Id",
                        "description": "Id of the user",
                        "type": "integer",
                        "format": "int64",
                        "minimum": "1"
                    },
                    "name": {
                        "title": "Name",
                        "description": "Name of the user",
                        "type": "string",
                        "maxLength": 100,
                        "example": "Tugrul"
                    },
                    "surname": {
                        "title": "Surname",
                        "description": "Surname of the user",
                        "type": "string",
                        "maxLength": 100,
                        "example": "Yıldırım"
                    },
                    "username": {
                        "title": "Username",
                        "description": "Username of the user for login",
                        "type": "string",
                        "maxLength": 30,
                        "example": "tugrulyildirim"
                    },
                    "password": {
                        "title": "Password",
                        "description": "Password of the user",
                        "type": "string",
                        "maxLength": 500,
                        "example": "MyPassword123"
                    },
                    "phone": {
                        "title": "Phone",
                        "description": "Phone number of the user",
                        "type": "string",
                        "maxLength": 50,
                        "example": "+905312354229"
                    },
                    "email": {
                        "title": "Email",
                        "description": "Email of the user",
                        "type": "string",
                        "maxLength": 255,
                        "example": "contact[at]tugrulyildirim.com"
                    },
                    "avatar": {
                        "title": "Avatar",
                        "description": "Avatar of the user",
                        "type": "string",
                        "maxLength": 255,
                        "example": "https://tugrulyildirim.com/avatar.png"
                    },
                    "bio": {
                        "title": "Bio",
                        "description": "Biography of the user",
                        "type": "string",
                        "maxLength": 1000,
                        "example": "I am a software developer"
                    },
                    "website": {
                        "title": "Website",
                        "description": "Website of the user",
                        "type": "string",
                        "maxLength": 255,
                        "example": "https://tugrulyildirim.com"
                    },
                    "company_id": {
                        "title": "Company ID",
                        "description": "Company of the user",
                        "type": "integer",
                        "format": "int64",
                        "minimum": "1"
                    },
                    "city": {
                        "title": "City",
                        "description": "City of the user",
                        "type": "string",
                        "maxLength": 255,
                        "example": "İstanbul"
                    },
                    "country": {
                        "title": "Country",
                        "description": "Country of the user",
                        "type": "string",
                        "maxLength": 255,
                        "example": "Turkey"
                    },
                    "address_line_1": {
                        "title": "Address line 1",
                        "description": "First address line of the user",
                        "type": "string",
                        "maxLength": 255,
                        "example": "İstanbul Turkey"
                    },
                    "address_line_2": {
                        "title": "Address line 2",
                        "description": "Second address line of the user",
                        "type": "string",
                        "maxLength": 255,
                        "example": "İstanbul Turkey"
                    },
                    "address_line_3": {
                        "title": "Address line 3",
                        "description": "Third address line of the user",
                        "type": "string",
                        "maxLength": 255,
                        "example": "İstanbul Turkey"
                    },
                    "postal_code": {
                        "title": "Postal code",
                        "description": "Postal code of the use",
                        "type": "string",
                        "maxLength": 30,
                        "example": "34000"
                    },
                    "state": {
                        "title": "State",
                        "description": "State of the user",
                        "type": "string",
                        "maxLength": 255,
                        "example": "İstanbul"
                    },
                    "description": {
                        "title": "Description",
                        "description": "Description of the user",
                        "type": "string",
                        "maxLength": 1000,
                        "example": "I am a software developer"
                    },
                    "balance": {
                        "title": "Balance",
                        "description": "Balance of the user",
                        "type": "number",
                        "format": "double",
                        "example": "0.00"
                    },
                    "currency": {
                        "title": "Currency",
                        "description": "Default currency of the user",
                        "type": "string",
                        "maxLength": 3,
                        "example": "TRY"
                    },
                    "discount": {
                        "title": "Discount",
                        "description": "Default discount of the user",
                        "type": "number",
                        "format": "double",
                        "example": "0.00"
                    },
                    "invoice_prefix": {
                        "title": "Invoice prefix",
                        "description": "Default invoice prefix of the user",
                        "type": "string",
                        "maxLength": 10,
                        "example": "INV-"
                    },
                    "default_tax_rate": {
                        "title": "Default tax rate",
                        "description": "Default tax rate of the user",
                        "type": "number",
                        "format": "double",
                        "example": "18.00"
                    },
                    "timezone": {
                        "title": "Timezone",
                        "description": "Default timezone of the user",
                        "type": "string",
                        "maxLength": 255,
                        "example": "Europe/Istanbul"
                    },
                    "language": {
                        "title": "Language",
                        "description": "Default language of the user",
                        "type": "string",
                        "maxLength": 7,
                        "example": "tr"
                    },
                    "user_roles": {
                        "title": "User role list",
                        "description": "User role list of the user",
                        "type": "string",
                        "maxLength": 1000,
                        "example": "1,2,3,4,5"
                    },
                    "status": {
                        "title": "Status",
                        "description": "Status of the user",
                        "type": "boolean",
                        "example": "true"
                    },
                    "email_verified_at": {
                        "title": "Email verified at",
                        "description": "Email verified at of the user",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "created_at": {
                        "title": "Created at",
                        "description": "Created at of the user",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    },
                    "updated_at": {
                        "title": "Updated at",
                        "description": "Updated at of the user",
                        "type": "string",
                        "format": "date-time",
                        "example": "2020-01-01 00:00:00"
                    }
                },
                "type": "object",
                "xml": {
                    "name": "UserResource"
                }
            }
        },
        "securitySchemes": {
            "passport": {
                "type": "oauth2",
                "description": "Laravel passport oauth2 security.",
                "in": "header",
                "scheme": "https",
                "flows": {
                    "password": {
                        "authorizationUrl": "http://admin.local/api/v1/auth/authorize",
                        "tokenUrl": "http://admin.local/api/v1/auth/login",
                        "refreshUrl": "http://admin.local/api/v1/auth/token/refresh",
                        "scopes": []
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Projects",
            "description": "API Endpoints of Projects"
        }
    ],
    "security": [
        {
            "oauth2_security_example": [
                "read",
                "write"
            ],
            "passport": []
        }
    ]
}